"use strict";(self.webpackChunkpersonal_blog_on_react=self.webpackChunkpersonal_blog_on_react||[]).push([[980],{980:function(e,r,t){t.r(r);var s=t(152),a=t(791),o=t(743),n=t(677),i=t(871),l=t(924),c=t(184);r.default=function(){var e=(0,i.bx)(),r=(0,a.useRef)(),t=(0,a.useRef)(),h="\n    const foo = 'foo'; \n    const bar = 'bar';\n    console.log(foo + bar);\n  ".trim(),m=(0,a.useState)(h),d=(0,s.Z)(m,2),u=d[0],p=d[1],f=(0,a.useState)(h),g=(0,s.Z)(f,2),b=g[0],x=g[1],y=(0,a.useState)(!1),j=(0,s.Z)(y,2),k=j[0],w=j[1];(0,l.Cq)("https://cdnjs.cloudflare.com/ajax/libs/prism/1.27.0/themes/prism-okaidia.min.css","sha512-mIs9kKbaw6JZFfSuo+MovjU+Ntggfoj8RwAmJbVXQ5mkAX5LlgETQEweFPI18humSPHymTb5iikEOKWF7I8ncQ==","anonymous","no-referrer"),(0,l.Cq)("https://cdnjs.cloudflare.com/ajax/libs/prism/1.27.0/plugins/line-numbers/prism-line-numbers.min.css","sha512-cbQXwDFK7lj2Fqfkuxbo5iD1dSbLlJGXGpfTDqbggqjHJeyzx88I3rfwjS38WJag/ihH7lzuGlGHpDBymLirZQ==","anonymous","no-referrer");return(0,l.hd)(["https://cdnjs.cloudflare.com/ajax/libs/prism/1.27.0/components/prism-core.min.js","https://cdnjs.cloudflare.com/ajax/libs/prism/1.27.0/plugins/autoloader/prism-autoloader.min.js","https://cdnjs.cloudflare.com/ajax/libs/prism/1.27.0/plugins/line-numbers/prism-line-numbers.min.js"],["sha512-LCKPTo0gtJ74zCNMbWw04ltmujpzSR4oW+fgN+Y1YclhM5ZrHCZQAJE4quEodcI/G122sRhSGU2BsSRUZ2Gu3w==","sha512-GP4x8UWxWyh4BMbyJGOGneiTbkrWEF5izsVJByzVLodP8CuJH/n936+yQDMJJrOPUHLgyPbLiGw2rXmdvGdXHA==","sha512-dubtf8xMHSQlExGRQ5R7toxHLgSDZ0K7AunqPWHXmJQ8XyVIG19S1T95gBxlAeGOK02P4Da2RTnQz0Za0H0ebQ=="],w),fetch("https://raw.githubusercontent.com/NeoBliz1/t-msg-bot/master/app.py").then((function(e){return e.text()})).then((function(e){return p(e)})),fetch("https://raw.githubusercontent.com/NeoBliz1/t-msg-bot/master/wsgi.py").then((function(e){return e.text()})).then((function(e){return x(e)})),(0,a.useEffect)((function(){k&&(window.Prism.highlightElement(r.current),window.Prism.highlightElement(t.current))}),[k,u]),(0,c.jsx)(o.Z,{className:"justify-content-center",children:(0,c.jsxs)(n.Z,{className:"text-justify",xs:12,sm:11,md:11,xxl:6,children:[(0,c.jsx)("h4",{className:e.h4,children:"Website chat with messages via telegram, easy peasy. My minds before I've started dive into."}),(0,c.jsx)("div",{className:"overflow-hidden position-relative",style:{height:"16rem"},children:(0,c.jsx)("img",{src:"//live.staticflickr.com/6133/5940816324_14dc1e5197_b.jpg",className:"w-100 position-absolute top-50 start-50 translate-middle",alt:"The easy way is hard enough"})}),(0,c.jsxs)("div",{className:"d-flex justify-content-center "+e.linkToAuthor,children:[(0,c.jsx)("a",{href:"https://flic.kr/p/a3YeHE",target:"_blank",rel:"noreferrer",className:"me-1 text-secondary",children:"Photo: Nicol\xe1s Boullosa"}),(0,c.jsx)("a",{href:"https://creativecommons.org/licenses/by/2.0/",target:"_blank",rel:"noreferrer",className:"text-secondary",children:"(CC BY 2.0)"})]}),(0,c.jsxs)("div",{className:e.p,style:{textAlign:"justify"},children:[(0,c.jsxs)("p",{children:["First of all I've researched some telegram chat apps which already existed. Those either demanded payment either was not suitable format for my website. So I've thought: \"It will be easy to create app like this, also it will be useful experience\".",(0,c.jsx)("a",{className:"mx-1 "+e.p,target:"_blank",rel:"noreferrer",href:"https://neobliz1.github.io/",children:"Front-end"}),"part written on",(0,c.jsx)("a",{className:"mx-1 "+e.p,target:"_blank",rel:"noreferrer",href:"https://jqueryui.com/dialog/",children:"Jquery UI"}),"framework and",(0,c.jsx)("a",{className:"mx-1 "+e.p,target:"_blank",rel:"noreferrer",href:"https://jquery.com/",children:"Jquery"}),"Library. It has simple logic, while chat is open every 5 second it sends request for getting messages from the server."]}),(0,c.jsxs)("p",{children:["Instruction about server side based on the",(0,c.jsx)("a",{className:"mx-1 "+e.p,target:"_blank",rel:"noreferrer",href:"https://aliabdelaal.medium.com/telegram-bot-tutoria-using-python-and-flask-1fc634da9522",children:"Ali's article."})," ","According to the article I implemented that logic to my",(0,c.jsx)("a",{className:"mx-1 "+e.p,target:"_blank",rel:"noreferrer",href:"https://github.com/NeoBliz1/t-msg-bot/blob/master/app.py",children:"program."}),"Code written in python with Flask framework. Firstly I've started to analyze how flask is working. I've read about",(0,c.jsx)("a",{className:"mx-1 "+e.p,target:"_blank",rel:"noreferrer",href:"https://flask.palletsprojects.com/en/2.0.x/quickstart/#routing",children:"flask"}),"routes and",(0,c.jsx)("a",{className:"mx-1 "+e.p,target:"_blank",rel:"noreferrer",href:"https://docs.python-requests.org/en/latest/user/quickstart/#make-a-request",children:"requests"}),"library, it seemed to be enough."]}),(0,c.jsx)("pre",{className:"line-numbers",style:{maxHeight:"800px"},children:(0,c.jsx)("code",{ref:r,className:"language-python",children:u})}),(0,c.jsxs)("p",{children:["Insofar as I was creating an app on the local machine, it was rejecting every request that I was trying to send from local server to another port. So because of that I made a decision deploy app on",(0,c.jsx)("a",{className:"mx-1 "+e.p,target:"_blank",rel:"noreferrer",href:"https://www.heroku.com/",children:"Heroky Cloud service."}),"Considering Ali's article it seemed to be a good idea. Heroku is quite convenient and simple for newbies, in additional it's free for pet projects. So I've read the",(0,c.jsx)("a",{className:"mx-1 "+e.p,target:"_blank",rel:"noreferrer",href:"https://devcenter.heroku.com/articles/getting-started-with-python",children:"manual"}),"how deployed the app, then I installed a Heroku local app on my PC via Ubuntu terminal."]}),(0,c.jsxs)("p",{children:["After deploying, it still was an error like 'Cross-Origin Request Blocked'. I read around some articles about CORS errors and I found",(0,c.jsx)("a",{className:"mx-1 "+e.p,target:"_blank",rel:"noreferrer",href:"https://flask-cors.readthedocs.io/en/latest/",children:"Flask extension"}),"for handling Cross Origin Resource Sharing (CORS). Flask_cors made cross-origin AJAX possible. So I added Flask-CORS to my app, after that requests finally reached the server. Heroku is convenient service for pet projects, but it doesn't have possibility to set free SSL certificate (I've tried sertificate from Cloudflare)."]}),(0,c.jsxs)("p",{children:["Telegram",(0,c.jsx)("a",{className:"mx-1 "+e.p,href:"https://core.telegram.org/bots/webhooks#the-short-version",target:"_blank",rel:"noreferrer",children:"webhook"}),"it's a useful feature which allows to get a response message from telegram server in the same moment as it sends to telegram bot from definite user. But it demands",(0,c.jsx)("a",{className:"mx-1 "+e.p,href:"https://core.telegram.org/bots/webhooks#ssl-needs-a-certificate",target:"_blank",rel:"noreferrer",children:"SSL"}),". Spent some time reading about SSL certificates, I've found possibility to get a free SSL certificate from Cloudflare. So I made the decision to rent a cheap Ubuntu server and set up my new application there. For server tuning I used",(0,c.jsx)("a",{className:"mx-1 "+e.p,href:"https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-gunicorn-and-nginx-on-ubuntu-20-04",target:"_blank",rel:"noreferrer",children:"Digitalocean guide"}),"."]}),(0,c.jsx)("pre",{className:"line-numbers",style:{maxHeight:"800px"},children:(0,c.jsx)("code",{ref:t,className:"language-python",children:b})})]})]})})}}}]);
//# sourceMappingURL=980.776bc660.chunk.js.map